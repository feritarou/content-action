name: Mastory Content Action
description: Propagates changes to your repository so they become directly available in Mastory.

inputs:
  scope:
    description: Your content contributor scope (by default, your GitHub user or organization name). Check your profile page on mastory.io if you are unsure what your scope name is.
    required: false
    default: ${{ github.repository_owner_id }}
  api_key:
    description: Your Mastory API key.
    required: true
  reinit:
    description: |
      Re-initializes your content scope based on a full re-evaluation of your repository.
    default: ''
  url_base:
    description: The base URL for calls to the Content API.
    default: https://app.mastory.io/api/content
runs:
  using: composite
  steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 2
    - shell: bash
      if: inputs.reinit
      env:
        URL_BASE: ${{ inputs.url_base }}
      run: |
        echo "Reinitializing store based on a full repository examination."
        echo "Your scope is ${{ inputs.scope }}"

        echo "Clearing content scope ..."
        curl --fail-with-body -s -X DELETE $URL_BASE/${{ inputs.scope }} -H "x-mastory-api-key: ${{ inputs.api_key }}"
        echo

        echo "Processing all files in the repository ..."
        for file in $(find . -type f -not -wholename './.git/**'); do
          if [ -n "$(echo "${file:2}" | grep -oP '(^|/)\.')" ]; then
            echo "- ignoring ${file:2} ..."
          else
            echo "- adding ${file:2} ..."
            echo -n "  "
            curl --fail-with-body -s -X PUT $URL_BASE/${{ inputs.scope }}/${file:2} -H "x-mastory-api-key: ${{ inputs.api_key }}" --upload-file "${file:2}"
            echo
          fi
        done
    - id: changes
      if: '!inputs.reinit'
      uses: tj-actions/changed-files@v45
      with:
        safe_output: false
        include_all_old_new_renamed_files: true
        old_new_files_separator: '>'
        old_new_separator: '>'
        files_ignore: |
          .*
          .*/**
    - shell: bash
      if: '!inputs.reinit'
      env:
        a: ${{ steps.changes.outputs.added_files }}
        m: ${{ steps.changes.outputs.modified_files }}
        d: ${{ steps.changes.outputs.deleted_files }}
        r: ${{ steps.changes.outpus.all_old_new_renamed_files }}
        c: ${{ steps.changes.outpus.copied_files }}
        URL_BASE: ${{ inputs.url_base }}
      run: |
        echo "Your scope is ${{ inputs.scope }}"

        echo "Processing added files"
        for file in $a; do
          if [ -n "$(echo "$file" | grep -oP '(^|/)\.')" ]; then
            echo "- ignoring $file ..."
          else
            echo "- adding $file ..."
            echo -n "  "
            curl --fail-with-body -s -X PUT $URL_BASE/${{ inputs.scope }}/$file -H "x-mastory-api-key: ${{ inputs.api_key }}" --upload-file "$file"
            echo
          fi
        done

        echo "Processing modified files"
        for file in $m; do
          if [ -n "$(echo "$file" | grep -oP '(^|/)\.')" ]; then
            echo "- ignoring $file ..."
          else
            echo "- updating $file ..."
            echo -n "  "
            curl --fail-with-body -s -X PATCH $URL_BASE/${{ inputs.scope }}/$file -H "x-mastory-api-key: ${{ inputs.api_key }}" --upload-file "$file"
            echo
          fi
        done

        echo "Processing deleted files"
        for file in $d; do
          if [ -n "$(echo "$file" | grep -oP '(^|/)\.')" ]; then
            echo "- ignoring $file ..."
          else
            echo "- deleting $file ..."
            echo -n "  "
            curl --fail-with-body -s -X DELETE $URL_BASE/${{ inputs.scope }}/$file -H "x-mastory-api-key: ${{ inputs.api_key }}"
            echo
          fi
        done

        echo "Processing renamed files"
        for pair in $r; do
          old="${pair%>*}"
          new="${pair#*>}"
          echo "- renaming ${old} ---> ${new}"
        done
      
        echo "Processing copied files"
        for pair in $c; do
          old="${pair%>*}"
          new="${pair#*>}"
          echo "- copying ${old} ---> ${new}"
        done

